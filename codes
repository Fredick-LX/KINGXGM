初始海拔 = 24
初速 = 750
速度 = 初速

def test2():
    路口(-1)
    路口(0)
    路口(0)
    路口(-1)
    路口(1)
    pass

def 走出路口():
    robot_drv.start_time()
    while robot_drv.get_time() < 1000:
        if robot_drv.get_light(37) > 0 or robot_drv.get_gray(34) == 153 or robot_drv.get_gray(35) == 153 or robot_drv.get_gray(36) == 153:
            break
        走中间公式()
        飞车()
    print("出路口")

def 跳(角度):
    robot_drv.stop_all_motor()
    robot_drv.sleep(200)
    while robot_drv.get_dist(42) > 60:
        robot_drv.set_motors(1,150,2,150,3,150,4,150)
    while robot_drv.get_dist(42) < 455:
        robot_drv.set_motors(1,-150,2,-150,3,-150,4,-150)
    robot_drv.stop_all_motor()
    robot_drv.sleep(100)
    for i in range(34):
        robot_drv.tanshe(120,200,121,3500,122,3500,123,3500)
    robot_drv.sleep(600)
    自由旋转(角度)
    走出路口()

def 自由旋转(角度):
    robot_drv.set_motors(1,300,2,300,3,300,4,300)
    robot_drv.sleep(100)
    while (robot_drv.get_compass(43)- 角度 + 360) % 360 > 7:
        if ((robot_drv.get_compass(43) - 角度 + 360) % 360) > 180:
            robot_drv.set_motors(1,-100,2,-100,3,100,4,100)
        else:
            robot_drv.set_motors(1,100,2,100,3,-100,4,-100)
    robot_drv.stop_all_motor()
    robot_drv.sleep(100)
    print(角度)

def 飞车(speed=510):
    if robot_drv.get_gray(35) == 48 and robot_drv.get_height(41)==初始海拔:
        robot_drv.set_motors(1,speed,2,speed,3,speed,4,speed)
        robot_drv.sleep(700)
        print("飞车")
        robot_drv.start_time()
        while robot_drv.get_time() < 100:
            走中间公式(True)
            if robot_drv.get_light(37) > 0 or robot_drv.get_gray(35) == 153:
                print("break")
                robot_drv.stop_all_motor()
                robot_drv.sleep(100)
                break
    pass

def 走到路口():
    while robot_drv.get_gray(34) != 255 and robot_drv.get_gray(35) != 255 and robot_drv.get_gray(36) != 255:
        走中间公式()
        窄路曲行()
        飞车()
    路口停()

def 路口停():
    robot_drv.stop_all_motor()
    for i in range(10):
        robot_drv.tanshe(120,2000)
    while robot_drv.get_light(37) > 0:
        robot_drv.stop_all_motor()

def 窄路曲行(s=300,rate=2):
    if robot_drv.get_height(41) == 初始海拔 and robot_drv.get_gray(35) == 153:
        robot_drv.stop_all_motor()
        robot_drv.set_motors(1,100,2,100,3,100,4,100)
        robot_drv.sleep(10)
    while robot_drv.get_height(41) > 初始海拔+10 and robot_drv.get_gray(35) == 153:
        if robot_drv.get_dist(38)!=255:
            robot_drv.set_motors(1,s,2,s,3,int(s/rate),4,int(s/rate))
        elif robot_drv.get_dist(39)!=255:
            robot_drv.set_motors(3,s,4,s,1,int(s/rate),2,int(s/rate))
        else:
            robot_drv.set_motors(3,s,4,s,1,s,2,s)

#TODO
def 走中间公式(flag=False):
    rate = 0.01 if robot_drv.get_dist(40)<1000 else robot_drv.get_dist(40)/200
    速度差 = int(abs(robot_drv.get_dist(32) - robot_drv.get_dist(33)) / rate)
    if robot_drv.get_light(37) > 350:
        速度 = 200
    elif robot_drv.get_dist(40) < 2500:
        速度 = 450
    elif robot_drv.get_dist(38) < 200 or robot_drv.get_dist(38) < 200:
        速度 = 500
    else:
        速度 = 初速
    if flag==True:
        速度 = 500
    if 速度差 > 速度:
        速度差 = 速度
    if robot_drv.get_dist(33) > robot_drv.get_dist(32):
        robot_drv.set_motors(1,速度,2,速度,3,速度 - 速度差,4,速度 - 速度差)
    else:
        robot_drv.set_motors(3,速度,4,速度,1,速度 - 速度差,2,速度 - 速度差)
def 左转():
    robot_drv.set_motors(1,300,2,300,3,300,4,300)
    robot_drv.sleep(500)
    robot_drv.stop_all_motor()
    robot_drv.set_motors(1,-250,2,-250,3,250,4,250)
    robot_drv.sleep(400)
    while robot_drv.get_dist(40)<1500:
        robot_drv.set_motors(1,-250,2,-250,3,250,4,250)
    robot_drv.stop_all_motor()
    走出路口()

def 右转():
    robot_drv.set_motors(1,300,2,300,3,300,4,300)
    robot_drv.sleep(500)
    robot_drv.stop_all_motor()
    robot_drv.set_motors(1,250,2,250,3,-250,4,-250)
    robot_drv.sleep(400)
    while robot_drv.get_dist(40)<1500:
        robot_drv.set_motors(1,250,2,250,3,-250,4,-250)
    robot_drv.stop_all_motor()
    走出路口()

def 直行(): 
    robot_drv.set_motors(1,300,2,300,3,300,4,300)
    robot_drv.sleep(700)
    走出路口()

def 路口左转():
    走到路口()
    左转()

def 路口右转():
    走到路口()
    右转()

def 路口直行():
    走到路口()
    直行()
def 路口(way):
    if way == 1:
        路口右转()
    elif way==-1:
        路口左转()
    elif way==0:
        路口直行()
    else:
        print("err")
    pass
def main():
    print(f"{初始海拔}\n{初速}")
    test2()

# *********************************************
# 以下为初始化代码,请不要修改或者删除
# *********************************************
import sys
import irobotq_robotdriver as robot_drv

if __name__ == '__main__':

    try:
        ret=robot_drv.init(sys.argv[1],sys.argv[2],int(sys.argv[3]))
        if(ret == 0):
            main()
            robot_drv.over()
            print("机器人程序运行结束")
        else:
            print('初始化错误，错误码:%d' % ret)
        print('按任意键退出')
        v=input()
    except Exception as e:
        print (e)
        print('按任意键退出')
        v=input()
'''
base=0
degrees={
        "a":(0+base)%360,
        "b":(90+base)%360,
        "c":(135+base)%360,
        "d":(150+base)%360,
        "e":(180+base)%360,
        "f":(225+base)%360,
        "g":(240+base)%360,
        "h":(270+base)%360,
        "i":(315+base)%360,
        "j":(330+base)%360
        }'''
